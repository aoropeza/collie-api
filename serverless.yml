service: collie-api

custom:
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  apiKeys:
    - name: collie-api-key-${self:custom.stage}
  usagePlan:
    quota:
      limit: ${env:USAGE_QUOTA_LIMIT, file(vars/${self:custom.stage}.yml):USAGE_QUOTA_LIMIT}
      period: ${env:USAGE_QUOTA_PERIOD, file(vars/${self:custom.stage}.yml):USAGE_QUOTA_PERIOD}
    throttle:
      burstLimit: ${env:USAGE_THROTTLE_RATE_LIMIT, file(vars/${self:custom.stage}.yml):USAGE_THROTTLE_RATE_LIMIT}
      rateLimit: ${env:USAGE_THROTTLE_BURST_LIMIT, file(vars/${self:custom.stage}.yml):USAGE_THROTTLE_BURST_LIMIT}
  environment:
    NODE_ENV: ${env:NODE_ENV, file(vars/${self:custom.stage}.yml):NODE_ENV}
    DOMAIN_NAME: ${env:DOMAIN_NAME, file(vars/${self:custom.stage}.yml):DOMAIN_NAME}
    DB_HOST: ${env:DB_HOST, file(vars/${self:custom.stage}.yml):DB_HOST}
    DB_USER: ${env:DB_USER, file(vars/${self:custom.stage}.yml):DB_USER}
    DB_PWD: ${env:DB_PWD, file(vars/${self:custom.stage}.yml):DB_PWD}
    DB_NAME: ${env:DB_NAME, file(vars/${self:custom.stage}.yml):DB_NAME}

functions:
  graphql:
    handler: src/index.handler
    events:
      - http:
          path: api
          method: post
          cors: true
          private: true
      - http:
          path: api
          method: get
          cors: true
          private: true
package:
  exclude:
    - __test__/**
    - src/local-server.js
    - package.json
    - package-lock.json

resources:
  Resources:
    CustomDomainMap:
      Type: "AWS::ApiGateway::BasePathMapping"
      Properties:
        BasePath: collie
        DomainName: ${self:provider.environment.DOMAIN_NAME}
        Stage: ${self:custom.stage}
        RestApiId: { Ref: ApiGatewayRestApi }
